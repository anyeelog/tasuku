!function(){!async function(){try{const n="/api/tasks?id="+s(),a=await fetch(n),o=await a.json();t=o.tasks,e()}catch(t){console.log(t)}}();let t=[];function e(){if(function(){const t=document.querySelector("#tasks");for(;t.firstChild;)t.removeChild(t.firstChild)}(),0===t.length){const t=document.querySelector("#tasks"),e=document.createElement("LI");return e.textContent="There are no tasks",e.classList.add("no-tasks"),void t.appendChild(e)}const n={0:"Incompleted",1:"Completed"};t.forEach(a=>{const o=document.createElement("LI");o.dataset.taskId=a.id,o.classList.add("task");const c=document.createElement("DIV");c.classList.add("task-header");const d=document.createElement("H4");d.classList.add("task-name"),d.textContent=a.name;const i=document.createElement("P");i.classList.add("task-description"),a.description?i.textContent=a.description:i.textContent="(No description)";const r=document.createElement("DIV");r.classList.add("task-footer");const l=document.createElement("P");l.classList.add("task-status"),l.classList.add(""+n[a.status].toLowerCase()),l.textContent=n[a.status],l.dataset.statusTask=a.status;const p=document.createElement("BUTTON");p.classList.add("toggle-task"),p.dataset.idTask=a.id,p.textContent="Complete Task",p.onclick=function(){!function(n){const a="1"===n.status?"0":"1";n.status=a,async function(n){const{id:a,name:o,description:c,status:d,project_id:i}=n,r=new FormData;r.append("id",a),r.append("name",o),r.append("description",c),r.append("status",d),r.append("url",s());try{const n="http://localhost:3000/api/task/update",s=await fetch(n,{method:"POST",body:r});"success"===(await s.json()).response.type&&(t=t.map(t=>(t.id===a&&(t.status=d),t)),e())}catch(t){console.log(t)}}(n)}({...a})};const u=document.createElement("IMG");u.setAttribute("src","https://img.icons8.com/?size=512&id=G3ke6AwujrRv&format=png"),u.setAttribute("height","32px"),u.setAttribute("alt","Delete button");const m=document.createElement("BUTTON");m.classList.add("delete-task"),m.dataset.idTask=a.id,m.onclick=function(){!function(n){Swal.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then(a=>{a.isConfirmed&&async function(n){const{id:a,name:o,description:c,status:d}=n,i=new FormData;i.append("id",a),i.append("name",o),i.append("description",c),i.append("status",d),i.append("url",s());try{const s="http://localhost:3000/api/task/delete",a=await fetch(s,{method:"POST",body:i});(await a.json()).result&&(Swal.fire("Deleted!","The task has been deleted.","success"),t=t.filter(t=>t.id!==n.id),e())}catch(t){}}(n)})}({...a})},o.appendChild(c),o.appendChild(i),o.appendChild(r),c.appendChild(d),m.appendChild(u),c.appendChild(m),r.appendChild(p),r.appendChild(l);document.querySelector("#tasks").appendChild(o)})}function n(t,e,n){const s=document.querySelector(".alerts");s&&s.remove();const a=document.createElement("UL");a.classList.add("alerts"),a.innerHTML=`<li class="alert ${e}">${t}</li>`,n.parentElement.insertBefore(a,n)}function s(){const t=new URLSearchParams(window.location.search);return Object.fromEntries(t.entries()).id}document.querySelector("#add-task").addEventListener("click",(function(){const a=document.createElement("DIV");a.classList.add("modal"),a.innerHTML='\n      <div class="form-container">\n        <p class="page-description">Add a new task</p>\n        <p style="padding: 0 50px;">Don\'t worry! Enter your email address and we\'ll send you a reset link.</p>\n        <form class="form form-task">\n          <div class="camp">\n            <input type="text" name="task" id="task" placeholder="Task title">\n          </div>\n          <div class="camp">\n            <input type="text" name="task-description" id="task-description" placeholder="Task description">\n          </div>\n          <div class="options">\n            <input type="submit" class="submit-new-task" value="Add task">\n            <button type="button" class="close-modal">Cancel</button>\n          </div>\n        </form>\n      </div>\n    ',setTimeout(()=>{document.querySelector(".form-container").classList.add("animate")},0),a.addEventListener("click",(function(o){o.preventDefault(),o.target.classList.contains("close-modal")&&a.remove(),o.target.classList.contains("submit-new-task")&&function(){const a=document.querySelector("#task").value.trim(),o=document.querySelector("#task-description").value.trim();if(""===a)return void n("Task name is required","error",document.querySelector(".options"));!async function(a,o){const c=new FormData;c.append("name",a),c.append("description",o),c.append("project_id",s());try{const s="http://localhost:3000/api/task",d=await fetch(s,{method:"POST",body:c}),i=await d.json();if(n(i.message,i.type,document.querySelector(".options")),"success"===i.type){document.querySelector(".modal").remove();const n={id:String(i.id),name:a,description:o,status:"0",project_id:i.project_id};t=[...t,n],e()}}catch(t){console.log(t)}}(a,o)}()})),document.querySelector("body").appendChild(a)}))}();